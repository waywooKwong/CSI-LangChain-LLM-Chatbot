web 内容来自 URL: https://nick-black.com/dankwiki/index.php/Notcurses      Notcurses - dankwiki, the wiki of nick black                           anonymousnot logged inlog indankwikiSearchCheck out my first novel, midnight's simulacra!   NotcursesFrom dankwikiNamespacespageDiscussionmoremorepage actionsReadview sourcehistoryWhen Bison graced her village, it was Tuesday notcurses is a library for building complex, vibrant textual user interfaces (TUIs) on modern terminal emulators. It does not use Ncurses (though it does make use of libtinfo from that package), nor is it an X/Open Curses source-compatible replacement. It is written in C, with C++-safe headers. Rust, C++, and Python wrappers are available. Source and issuetracking live at Github. Mailing list is at GoogleGroups. A full API reference is available as man pages. Please file bugs on any missing or inaccurate elements. There's also Doxygen output. I published a coherent textbook, "Hacking the Planet! with Notcurses", in April 2020. More details are available here. I recorded a DANKTECH video, "Console sex with Notcurses" as a gentle intro (its demo has been superseded by the NOTCURSES III demo). You can run this same demo on your local machine with notcurses-demo.  Contents  1 Features 2 Rendering 3 Unicode 4 Blitters  4.1 Pixel blitters   5 Input 6 Transparency/Contrasting  6.1 Sprites   7 Linear interpolation 8 Terminal emulators  8.1 Notes on particular terminals 8.2 Screen multiplexers 8.3 Linux console  8.3.1 fbterm 8.3.2 kmscon     9 Major Releases 10 See Also   Features Advanced and extensive runtime querying for terminal capabilities Optional use of "alternate screen" where available (enter_ca_mode/exit_ca_mode terminfo capabilities) All APIs use 24-bit 8bpc RGB color natively Color is quantized down for indexed palette terminals Transparency/semi-transparency plus dynamic high-contrast text Lower planes can affect color of higher translucent ones Sprites! Full support for Unicode, including wide glyphs and bidirectional text Composed keys (number pad, etc.) are mapped outside the defined Unicode regions Image/video support via ffmpeg or OpenImageIO Subregion fade in/out, text pulsing Linear interpolation for coloring geometric objects Multiple cell and pixel blitters, rotation, and arbitrary scaling Rendering Data structures of a Notcurses context The vast majority of functions draw to ncplane objects. A partial order (currently a total order) always exists over the planes. There is always at least one plane, the "standard plane". This plane cannot be resized, deleted, moved relative to the visible area, or reparented. Whenever notcurses updates its idea of the visible area's dimensions, it will resize the standard plane (references to the standard plane are not invalidated). Planes may otherwise be any size (invisible regions will not be rendered, and count only against memory), and can be moved to any position relative to the visible area. All planes, including the standard plane, can be freely moved along the z axis. A render operation consists of two logical phases: generation of the rendered scene, and blitting this scene to the terminal (these two phases might actually be interleaved, streaming the output as it is rendered). All ncplanes are locked while generating the frame. Frame generation requires determining an extended grapheme cluster, foreground color, background color, and style for each cell of the physical terminal. Writing the scene requires synthesizing a set of UTF-8-encoded characters and escape codes appropriate for the terminal, and writing this sequence to the output. Each cell can be rendered in isolation, though synthesis of the stream carries dependencies between cells. Recall that there is a total ordering on the N ncplanes, and that the standard plane always exists, with geometry equal to the physical screen. Each cell of the physical screen is thus intersected by some totally ordered subset of planes P0, P1...Pi, where 0 < i ≤ N. At each cell, rendering starts at the topmost intersecting plane P0. The algorithm descends until either:  it has locked in an extended grapheme cluster, and fore/background colors, or all i planes have been examined At each plane P, we consider a cell C. This cell is the intersecting cell, unless that cell has no EGC. In that case, C is the plane's default cell.  If we have not yet determined an EGC, and C has a non-zero EGC, use the EGC and style of C. If we have not yet locked in a foreground color, and C is not foreground-transparent, use the foreground color of C. If C is CELL_ALPHA_OPAQUE, lock the color in. If we have not yet locked in a foreground color, and C is not background-transparent, use the background color of C. If C is CELL_ALPHA_OPAQUE, lock the color in. If the algorithm concludes without an EGC, the cell is rendered with no glyph and a default background. If the algorithm concludes without a color locked in, the color as computed thus far is used.  Unicode Notcurses understands Unicode wide characters, and accounts for them. It is not possible to split the colors or styling of a wide glyph. It is not possible to print half of a glyph. It is not possible to print a narrow glyph over half of a wide glyph without obliterating the other half. These are all terminal emulator limitations. Whether and how a given Unicode codepoint will be rendered depends almost entirely on font support. In general, with sufficient fonts, emoji and other pictographs will be properly rendered as expected. The Linux console has particularly limited fonts, and most characters beyond ASCII are not reliable in that environment. Certain Unicode glyphs are used by notcurses for drawing. Failure to render these glyphs reasonably will have a negative impact on notcurses functionality. Most important of these are the Box Drawing Characters, the Block Elements, and the Braille Patterns. A wide character can be written at any offset within a row save the very last column. If a character (wide or narrow) exists in the right cell of a wide character, the original character will be destroyed. A narrow character can be written at any offset within a row. If a character (wide or narrow) is written onto the right cell of a wide character, that original character will be destroyed. It is thus possible for a single wide character to obliterate four columns' worth of glyphs: if two wide characters exist next to one another, and a new wide character is written over the right half of the first, both original glyphs will be obliterated. Likewise, if another (higher) plane bisects a wide glyph, the entire glyph is obliterated. notcurses does not currently handle right-to-left text in any special way, but terminals often apply their own heuristics and stylings. Generally this means that a series of glyphs from right-to-left languages will be reversed in the terminal, but this will not be detectable by notcurses's reflective calls (e.g. ncplane_at_yx()).  Blitters Multiple blitters are provided, and can be selected whenever pixel data is being rendered. This includes ncvisual objects and qrcodes. If Notcurses is started in ASCII mode (as opposed to UTF-8), all blitters will degrade to NCBLITTER_1x1 (unless NCVISUAL_OPTION_NODEGRADE is provided).    Value Geometry Comments   NCBLITTER_1x1  1x1->1  Uses spaces and sets the background color. The only blitter available in ASCII mode, and the only reliable blitter on the console. Pixel aspect ratio is equivalent to cell aspect ratio, usually resulting in vertical stretching. Lossless. Reliable no matter the font.   NCBLITTER_2x1  2x1->1  Default blitter. Pixel aspect ratio is one-half the cell aspect ratio, which is usually right where you want it. Uses Unicode upper- and lower-half blocks, and spaces. Lossless.   NCBLITTER_2x2  2x2->1  Pixel aspect ratio is equivalent to cell aspect ratio, usually resulting in vertical stretching. Uses Unicode quadrant and three-quarter blocks (in addition to upper- and lower-half blocks, and spaces). Lossy whenever more than two colors are used within a 2x2 pixel square, lossless otherwise (bi- and tri-linear interpolation is used for more than two colors).   NCBLITTER_3x2  3x2->1  Highest quality for most large images. Pixel aspect ratio improves over NCBLITTER_2x2 but is less perfect than NCBLITTER_2x1, leading to slight vertical stretching. Uses Unicode sextants, left and right half blocks, and spaces. Lossy whenever more than two colors are used within a 3x2 pixel square, lossless otherwise (generalized linear interpolation is used for more than two colors).   NCBLITTER_4x2  4x2->1  Uses Braille characters, which have spotty font support.   NCBLITTER_PIXEL  variable->1  Pixel blitter (see below)    Pixel blitters Ramble on, orca Some terminals support pixel graphics, including the Sixel system pioneered by DEC. Notcurses can employ pixel graphics using the NCBLIT_PIXEL blitter.  Sixel: xterm, mlterm, Alacritty (outstanding patch), WezTerm, foot, contour Kitty supports its own method (which is also supported by WezTerm) as does ITerm2 (which is also supported by WezTerm) the Linux framebuffer console supports its own graphics (via memory map) Notcurses does not currently output ReGIS vector graphics, nor the iTerm2 protocol. Some timings from notcurses 2.3.17, taken 2021-08-28 using:   ncplayer -bpixel ../data/notcursesIII.mkv -d0 -t0 -q   term  version  pgeom  cgeom  times   mlterm  3.9.0  880x1406  80x61  1m5.142s 1m.3.731s 1m3.631s   XTerm  368  880x1403  88x74  55.655s 55.433s 55.841s   alacritty  0.13.1  880x1400  88x70  55.716s 55.902s 55.709s   kitty  0.23.1  880x1440  88x70  33.179s 33.477s 33.385s   kitty  0.19.3  880x1440  88x70  54.722s 54.473s 54.867s   Input Notcurses provides input from keyboards and pointers (mice). Single Unicode codepoints are received from the keyboard, directly encoded as char32_ts. The input system must deal with numerous keyboard signals which do not map to Unicode code points. This includes the keypad arrows and function keys. These "synthesized" codepoints are enumerated in notcurses.h, and mapped into the Supplementary Private Use Area-B (U+100000..U+10FFFD). Mouse button events are similarly mapped into the SPUA-B. All events carry a ncinput structure with them. For mouse events, the x and y coordinates are reported within this struct. For all events, modifiers (e.g. "Alt") are carried as the modifiers bitfield in this struct.  Transparency/Contrasting It is not obvious what "transparency" or "alpha blending" means in a character context. I have assigned my own meanings. Each of the foreground and background channel of an ncplane's cell have two bits dedicated to alpha. Channels are always initialized to 0, and thus the default alpha setting is CELL_ALPHA_OPAQUE. It is important to note that glyph selection is independent of alpha. The first glyph found while descending the planes intersecting a cell will be the glyph used. Only presentation of the glyph is modified by alpha.    Value Macro Foreground Background   00 CELL_ALPHA_OPAQUE Use the fg color unchanged. Use the bg color unchanged.   01 CELL_ALPHA_BLEND Blend the fg color down. Blend the bg color down.   10 CELL_ALPHA_TRANSPARENT Select the next fg color. Select the next bg color.   11 CELL_ALPHA_HIGHCONTRAST Complement bg color computed through this plane. Forbidden.   The value 11 is currently forbidden for a bg alpha setting, but might be used in the future. To "blend the color down" means to average the colors encountered until hitting an opaque channel, or running out of planes. To "select the next color" means to ignore this color, and instead take the color as computed by lower planes. High-contrast text is not strictly defined. notcurses will attempt to make the glyph as readable as possible, given the background color computed at the cell. If loaded multimedia supports transparency (e.g. PNGs), transparent pixels will be considered as if CELL_ALPHA_TRANSPARENT was used.  Sprites Transparency plus bitmaps yield sprites. The "luigi" demo uses three bitmaps from Luigi's walking cycle in Super Mario Bros. Only one is shown at a time; the other two are hidden under the standard plane (onto which a background has been rendered).  Linear interpolation notcurses can color lines via linear interpolation between the two endpoints. This is done with ncplane_hline_interp() and ncplane_vline_interp(). If provided two endpoints of the same color, the line will be that single color.  Terminal emulators More information is available from the source tree in TERMINALS.md. The two primary environmental factors affecting notcurses performance are the terminal emulator and the configured fonts. For performance evaluation, I run notcurses-demo in each terminal three times. Each terminal is configured to use Inconsolata Medium 12 as its primary font, to 70% opacity (if supported), and run at a 70x80 geometry. I report the average of the three wall clock times, and the three FPS (i.e. frames rendered divided by time spent within notcurses_render()) measurements. If DirectColor output could not be rendered, the terminal is reported as a failure (this is perhaps/probably due to my ignorance). Some demos are a fixed number of frames, with a fixed target time. Some are a fixed number of frames, to be rendered as quickly as possible. Some are fixed time, with an intention of rendering as many frames as possible. For the FPS measurement, higher is better. For the time measurement, lower is better.   Last evaluated 2019-12-21 (notcurses 0.9.1)   Emulator  Perf  FPS / Seconds  TERM  Notes  T.416   xtermxterm-351  11.87  196.8  xterm-direct  eagle and view were very choppywidecolor doesn't colorize flame emojiuniblock ran without box breakage (only terminal to do so)  Y   rxvturxvt v9.22  x  x  failure  failure     libvte(using xfce4-terminal)xfce4-terminal 0.8.8 / vte 0.58.2  205.9  75.8  vte-direct    Y   kittykitty 0.15.0  682.3  72.9  kitty-direct  uniblock is deformed in a varying fashionwidecolor is missing some rangeswidecolor replaces some ranges with blocksseems very smooth under load  Y   alacrittyalacritty 0.4.1-dev  553.7  74.0  alacritty-direct  uniblock doesn't fade in properly  N   GNOME terminator(also VTE, but python)terminator 1.91 / vte 0.58.2  206.0  75.7  vte-direct    Y   terminologyterminology 1.3.2  x  x  failure  failure     konsolekonsole 19.08.1 / QT 5.12.5  168.5  83.8  konsole-direct  uniblock doesn't fade in properlyuniblock persistent damage on one lineboldface seems particularly strong  N   Note: some of these terminals (e.g. xterm) export an RGB-capable setaf/setab, which notcurses does not use due to its special casing of low values. notcurses instead generates (for seta[bf] only) its own escapes outside of the terminfo framework. I am uncertain as to whether this might have performance effects. The "T.416" column indicates whether this terminal appears to support the colon-delimited RGB escapes from ITU T.416. Raw data (2019-12-21, Schwarzgerät running Debian Unstable):  alacritty: 10140, 10121, 10143, 555.6, 553.8, 551.8, 1m13.9, 1m14.0, 1m14.1s konsole: 5655, 6286, 6433, 152.9, 174.3, 178.3, 1m24.3, 1m23.6, 1m23.5 terminator: 4628, 4788, 4759, 211.1, 208.6, 198.4, 1m15.1, 1m15.6, 1m16.5 kitty: 9475, 9539, 9518, 679.4, 687.5, 679.9, 1m12.9, 1m12.8, 1m12.9 xfce4-terminal: 4873, 4431, 4787, 214.7, 191.5, 211.4, 1m16.0, 1m16.1, 1m15.2 xterm: 1926, 1914, 1918, 11.8, 12.0, 11.8, 3m18.0, 3m14.7, 3m17.8  Notes on particular terminals The TERMINALS.md document in Notcurses is (hopefully) well worth checking out.  xterm, the first and (in many ways) the best. For 24-bit color, compile with --enable-direct-color and define the resource directColor to true. Both of these are the default in recent xterm. Use the xterm-direct terminfo entry For Sixel and Regis, compile with --enable-sixel-graphics --enable-regis-graphics VTE-based terminals including gnome-terminal and xfce4-terminal I'm not sure whether these ought be using the xterm- family or vte- family of terminfo entries, oddly enough Screen multiplexers screen: i've yet to see anything but a mess in screen tmux: works decently well, aside from consuming bitmaps mosh: we look like shit in mosh and i wish we didn't Linux console The Linux "system console" is a virtual device mapping to some device. We're primarily interested in the VGA text console, and the framebuffer console. The console supports only 256 different glyphs (512 with diminished color support), and never more than 16 colors (8 with 512 glyphs).  fbterm You'll typically need to be a member of the video group to run fbterm. It offers much better Unicode glyph coverage than the raw console, but still offers only 16 (programmable) colors.  kmscon Major Releases   Release Date Key features   3.0.0 2021-12-01  New input system, kitty keyboard/GPM/XTMODKEYS support   2.4.0 2021-09-06  Microsoft Windows and macOS support, Linux framebuffer graphics, "CLI mode"   2.3.0 2021-05-09  Tree selector, tabbed interface, pixel blitting   2.2.0 2021-02-08  libreadline, progress bars, notcurses-core extraction   2.1.0 2020-12-13  Sexblitter, ncneofetch   2.0.0 2020-10-12  Stable API!   1.7.0 2020-08-30  Linux font table reprogramming, EGC inlining, better Rust wrappers   1.6.0 2020-07-04  True three-channel transparency (glyph, fg, bg), Quadblitter default, beefed up ncdirect   1.5.0 2020-06-08  Quadblitter   1.4.0 2020-05-10  Fdplane and subproc widgets, reader widget, true scrolling   1.3.0 2020-04-13  Multiselector widget, plot widget, multiline output, margins, staining   1.2.0 2020-02-17  Menu widget, selector widget, CELL_ALPHA_HIGHCONTRAST, Python/C++ wrappers   1.1.0 2020-01-19  Massive speedups and much better video support   1.0.0 2019-01-04  First GA release   0.9.0 2019-12-18  Recognize COLORTERM, damage map, quantized colors, _yx API extensions, alignment   0.4.0 2019-12-05  Cell API, input, resize handling   0.3.0 2019-12-02  Video support, transparent planes, fades   0.2.0 2019-12-02  Panelreels, image support   0.1.0 2019-11-30  Ncplanes, basic output   See Also The Paul Williams automaton for lexing DECspeak XTerm control sequences Kitty-specific functionality iTerm2 extension escape sequences Jexer, a Java library of similar power Wezterm extension escape sequences outcurses, my earlier effects/widgets library for Ncurses Contact sheet from Notcurses 0.4.0 demo     Retrieved from "https://nick-black.com/dankwiki/index.php?title=Notcurses&oldid=10481" Categories: TerminalsProjectsnavigationrecent changesall pageswiki toolswiki toolsspecial pagespage toolspage toolsUser page toolsmorewhat links hererelated changesprintable versionpermanent linkpage informationpage logsCategoriesCategoriesTerminalsProjects modified on 3 February 2024 at 02:25.copyright © 2008–2024 nick black. all rights worth shit.privacy policyabout dankwikidisclaimers     ================================================================================  web 内容来自 URL: https://commons.wikimedia.org/w/index.php?curid=89852064      File:Thalaivankottai - Sri Naga Kanni Amman Temple 200.jpg - Wikimedia Commons                                                     File:Thalaivankottai - Sri Naga Kanni Amman Temple 200.jpg  From Wikimedia Commons, the free media repository    Jump to navigation Jump to search File File history File usage on Commons MetadataSize of this preview: 800 × 600 pixels. Other resolutions: 320 × 240 pixels | 640 × 480 pixels | 1,024 × 768 pixels | 1,280 × 960 pixels | 2,560 × 1,920 pixels | 3,264 × 2,448 pixels. Original file ‎(3,264 × 2,448 pixels, file size: 3.29 MB, MIME type: image/jpeg) File informationStructured dataCaptionsCaptionsEnglishTempleSummary[edit]    DescriptionThalaivankottai - Sri Naga Kanni Amman Temple 200.jpg  English:  Twenty Years Old Temple   Date  29 April 2020, 13:30:22   Source  Own work   Author  Rayenfield     Camera location9° 11′ 45.62″ N, 77° 27′ 18.25″ E   View this and other nearby images on: OpenStreetMap  9.196006;   77.455069  Thalaivankottai  Licensing[edit] I, the copyright holder of this work, hereby publish it under the following license:   This file is licensed under the Creative Commons Attribution-Share Alike 4.0 International license. You are free: to share – to copy, distribute and transmit the work to remix – to adapt the work Under the following conditions: attribution – You must give appropriate credit, provide a link to the license, and indicate if changes were made. You may do so in any reasonable manner, but not in any way that suggests the licensor endorses you or your use. share alike – If you remix, transform, or build upon the material, you must distribute your contributions under the same or compatible license as the original.https://creativecommons.org/licenses/by-sa/4.0CC BY-SA 4.0 Creative Commons Attribution-Share Alike 4.0 truetrue    File history  Click on a date/time to view the file as it appeared at that time.   Date/TimeThumbnailDimensionsUserComment current16:02, 4 May 20203,264 × 2,448 (3.29 MB)Rayenfield (talk | contribs)Uploaded own work with UploadWizard   You cannot overwrite this file.File usage on Commons  There are no pages that use this file.  Metadata This file contains additional information such as Exif metadata which may have been added by the digital camera, scanner, or software program used to create or digitize it. If the file has been modified from its original state, some details such as the timestamp may not fully reflect those of the original file. The timestamp is only as accurate as the clock in the camera, and it may be completely wrong. Camera manufacturerAppleCamera modeliPhone 6Exposure time1/33 sec (0.03030303030303)F-numberf/2.2ISO speed rating32Date and time of data generation13:30, 29 April 2020Lens focal length4.15 mmLatitude9° 11′ 45.62″ NLongitude77° 27′ 18.25″ EAltitude161.043 meters above sea levelHorizontal resolution72 dpiVertical resolution72 dpiSoftware used11.1.2File change date and time13:30, 29 April 2020Exposure ProgramNormal programExif version2.21Date and time of digitizing13:30, 29 April 2020Meaning of each componentY Cb Cr does not existAPEX shutter speed5.06APEX aperture2.2750072066878APEX brightness4.0083925112976APEX exposure bias0Metering modePatternFlashFlash did not fire, auto modeDateTimeOriginal subseconds724DateTimeDigitized subseconds724Supported Flashpix version1Color spacesRGBSensing methodOne-chip color area sensorScene typeA directly photographed imageExposure modeAuto exposureWhite balanceAuto white balanceFocal length in 35 mm film29 mmScene capture typeStandardGPS time (atomic clock)08:00Speed unitKilometers per hourSpeed of GPS receiver0Reference for direction of imageTrue directionDirection of image30.71164021164Reference for bearing of destinationTrue directionBearing of destination30.71164021164GPS date29 April 2020 Structured dataItems portrayed in this filedepictscreatorsome valueURL: https://commons.wikimedia.org/wiki/user:Rayenfieldauthor name string: RayenfieldWikimedia username: Rayenfieldcopyright statuscopyrightedcopyright licenseCreative Commons Attribution-ShareAlike 4.0 Internationalsource of fileoriginal creation by uploaderinception29 April 2020coordinates of the point of view9°11'45.622"N, 77°27'18.248"Eheading: 30.711640211640212 degreecaptured withiPhone 6exposure time0.03030303030303030303 secondf-number2.2focal length4.15 millimetreISO speed32media typeimage/jpeginstance ofphotograph Retrieved from "https://commons.wikimedia.org/w/index.php?title=File:Thalaivankottai_-_Sri_Naga_Kanni_Amman_Temple_200.jpg&oldid=791390511" Category: Sri Naga Kanni Amman TempleHidden categories: Files with coordinates missing SDC location of creationCC-BY-SA-4.0Self-published work    Navigation menu    Personal tools    EnglishNot logged inTalkContributionsCreate accountLog in       Namespaces    FileDiscussion       English           Views    ViewEditHistory       More        Search                  Navigate    Main pageWelcomeCommunity portalVillage pumpHelp center      Participate    Upload fileRecent changesLatest filesRandom fileContact us      Tools    What links hereRelated changesSpecial pagesPermanent linkPage informationConcept URICite this pageGet shortened URLDownload QR code      Print/export    Download as PDFPrintable version         This page was last edited on 8 August 2023, at 23:12. Files are available under licenses specified on their description page. All structured data from the file namespace is available under the Creative Commons CC0 License; all unstructured text is available under the Creative Commons Attribution-ShareAlike License; additional terms may apply. By using this site, you agree to the Terms of Use and the Privacy Policy.   Privacy policy About Wikimedia Commons Disclaimers Code of Conduct Developers Statistics Cookie statement Mobile view            ================================================================================  web 内容来自 URL: https://japanese.stackexchange.com/questions/78337/origin-of-nanka?noredirect=1      hiragana - Origin of Nanka - Japanese Language Stack Exchange                                          Skip to main content           Stack Exchange Network  						Stack Exchange network consists of 183 Q&A communities including Stack Overflow, the largest, most trusted online community for developers to learn, share their knowledge, and build their careers. 					 Visit Stack Exchange             Loading…                                                    Tour                                                                      Start here for a quick overview of the site                                                                  Help Center                                                              Detailed answers to any questions you might have                                                                          Meta                                                                                      Discuss the workings and policies of this site                                                                                  About Us                                                                              Learn more about Stack Overflow the company, and our products                                                    current community                             Japanese Language             help chat                      Japanese Language Meta                your communities                Sign up or log in to customize your list.                   more stack exchange communities  company blog         Log in  Sign up                          Home        Questions        Tags         Users        Unanswered       Teams      Now available on Stack Overflow for Teams! AI features where you work: search, IDE, and chat.          Learn more Explore Teams     Teams                    Ask questions, find answers and collaborate at work with Stack Overflow for Teams.             Explore Teams         Teams Q&A for work Connect and share knowledge within a single location that is structured and easy to search.                      Learn more about Teams                             Origin of Nanka            Ask Question           Asked 4 years, 1 month ago   Modified 4 years ago   Viewed                         218 times                                                   1                       When watching anime I heard this word come across (Tsuki ga kirei, ep4, somewhere at the end) and I was wondering if it is a combination of nani and ka or just another word. If it is a combination then why would it be used like that? with both nani and ka, which both imply a question. Alternatively, I know a word exists, which is nanika (I believe it ment: 'something'). Could it be just this word, but then the i removed. If that is the case why would it be removed? Anyway, it would be appreciated if anyone could shed some more light on this whole thing.     hiragana          Share   Improve this question                            Follow                                                asked Jul 1, 2020 at 14:57       John AdamsJohn Adams  9111 silver badge77 bronze badges               Add a comment  |                                                     1 Answer                                     1                   Sorted by:                       Reset to default                                      Highest score (default)                                               Date modified (newest first)                                               Date created (oldest first)                                                  2                            なんか is an informal version of 何か (なにか).  So you are correct in your assumption that it is a combination of なに and か. Interrogative words like なに (what), どこ (where), どれ (which), etc, are known as 'indeterminate pronouns' (see a related answer here), and when combined with the particle か, indicate that the object is unidentified. It generally corresponds to 'some ～' in English. Here are some more examples of か being added to indeterminate pronouns:  なにか something だれか somebody どこか somewhere どちらか one of the two いつか some day いくつか a few いくらか some amount          Share   Improve this answer                            Follow                                                answered Jul 1, 2020 at 16:47       kandymankandyman  11.6k1717 silver badges4646 bronze badges               Add a comment  |                                            You must log in to answer this question.                                    Not the answer you're looking for? Browse other questions tagged hiragana.                                                                    Featured on Meta                               Announcing a change to the data-dump process        Upcoming initiatives on Stack Overflow and across the Stack Exchange network...          Linked    0  に/へ/が/か in describing place     Related    29  Origin of the circle in ぬ, ね, and る    7  What is the origin of ゟ (より)?                    Hot Network Questions                                  Since we now have unlimited computation power (relative to historical norms), do we need to use statistical methods instead of simulations?                                         Where to find IC footprint lookup tables                                         Why are quadratic residues more interesting than cubic residues?                                         Is it still unsafe to cat an arbitrary file?                                         What did Rohan and Gondor think Sauron was?                                         When non-resident US citizens vote, how does that work with the electoral college?                                         Can I use "one" and "they/them/their" in the same sentence?                                         Does an ocean or sea count as Running Water against a vampire?                                         What purity of LOX required before it uses in Rocket Engine?                                         Why is much harder to encrypt emails, compared to web pages?                                         Draw Small Regular Polygons                                         Confusion about Mathematical Induction                                         The answer is in the middle                                         Making an accessible list or array in Latex                                         Wizz Air Non Eu citizen check in                                         UK citizen travel document to enter Ireland by air                                         Is it safer to sarcastically say "This is not a scam" than honestly say "This is a scam"?                                         Looking for a book I read pre-1990. Possibly called "The Wells of Yutan". A group of people go on a journey up a river                                         The relevance of knowing "just facts"                                         Is it illegal in Australia to add "chocolate or sultanas" to an Anzac biscuit?                                         Help troubleshooting inconsistent pH measurements                                         Why does obj.data not get updated                                         Is armor that can be worn under clothing any less bothersome to rest in?                                         Plastic guides in Shimano brake levers                                 more hot questions                          Question feed                              Subscribe to RSS                                         Question feed                         To subscribe to this RSS feed, copy and paste this URL into your RSS reader.                         Japanese Language  Tour Help Chat Contact Feedback    Company  Stack Overflow Teams Advertising Collectives Talent About Press Legal Privacy Policy Terms of Service Cookie Settings Cookie Policy     Stack Exchange Network                                        Technology                                                                         Culture & recreation                                                                         Life & arts                                                                         Science                                                                         Professional                                                                         Business                                                                         API                                                                         Data                                         Blog Facebook Twitter LinkedIn Instagram   Site design / logo © 2024 Stack Exchange Inc; user contributions licensed under CC BY-SA.                    rev 2024.7.30.13332               ================================================================================  web 内容来自 URL: https://www.furaffinity.net/view/48252023/      [C] Naughty Nora by Narikusha -- Fur Affinity [dot] net                                                                    Browse Search  Support ▼   News & Updates Help & Support Advertising Black Lives Matter SUPPORT FA Subscribe to FA+  FA Merch Store RULES & POLICIES Terms of Service Privacy Code of Conduct Upload Policy SOCIAL Discord Twitter     Log In or Create an Account   Log In Create an Account           Browse Search     Browse Search  Upload  Support     Community News & Updates Help & Support Advertising Black Lives Matter Rules & Policies Terms of Service Privacy Code of Conduct Upload Policy Social Discord Twitter      Shop          Log In or Create an Account   Log In Create an Account          News: July 17, 2024 - Yaoling Launches, Art Contest Reminder                        1023 Views   2 Comments   75 Favorites    General Rating    Download Submission   Category Artwork (Digital) / General Furry Art Species Dragon (Other) Gender Female Size 1644 x 984   digital art commission female girl feral furry sfw fur dragon Narikusha fullbody wings paws Nora Twokinds scales horns accessories desktop naughty      ‚òÖ Like Narikusha's stuff? Support them by sending some Shinies their way!   See more from Narikusha                       Listed in Folders   Commissions     Full Body             Prev Main Gallery Download Next          [C] Naughty Nora                          By Narikusha,                           posted  2 years ago                              Digital Artist ÔΩ•œâÔΩ• | Support me with Shinies!      ‚îè‚îÄ‚îÅ‚îÄ‚îÅ‚îÄ‚îÅ‚îÄ‚îÅ‚îÄ‚îÅ‚îÄ‚îÅ‚îÄÀô¬∑Ÿ†‚Ä¢‚óè∆∏Ã¥”ÅÃ¥∆∑‚óè‚Ä¢Ÿ†¬∑Àô‚îÄ‚îÅ‚îÄ‚îÅ‚îÄ‚îÅ‚îÄ‚îÅ‚îÄ‚îÅ‚îÄ‚îÅ‚îÄ‚îì Commission for  Thank you! I hope you like it!‚ô• ‚îó‚îÄ‚îÅ‚îÄ‚îÅ‚îÄ‚îÅ‚îÄ‚îÅ‚îÄ‚îÅ‚îÄ‚îÅ‚îÄÀô¬∑Ÿ†‚Ä¢‚óè∆∏Ã¥”ÅÃ¥∆∑‚óè‚Ä¢Ÿ†¬∑Àô‚îÄ‚îÅ‚îÄ‚îÅ‚îÄ‚îÅ‚îÄ‚îÅ‚îÄ‚îÅ‚îÄ‚îÅ‚îÄ‚îõ My commission are Open‚ô•                                           1023 Views   75 Favorites   2 Comments    General Rating         Category Artwork (Digital) / General Furry Art Species Dragon (Other) Gender Female Size 1644 x 984px     digital art commission female girl feral furry sfw fur dragon Narikusha fullbody wings paws Nora Twokinds scales horns accessories desktop naughty     Listed in Folders   Commissions     Full Body                dragonhead                   Photographer                    2 years ago                        And such skilled at being so!                                 Yijare                   B√ºcherdrache                    a year ago                        "See, thats why you should never leve me alone on your desk... pet me, please?"                                     Advertise |                  Get FA+ |                  Merch Store |                 Terms of Service |                 Privacy |                 Code of Conduct |                 Upload Policy                                  76923                Users online —                 1991 guests,                                     14054 registered                     and 60878 other   Limit bot activity to periods with less than 10k registered users online.  © 2005-2024 Frost Dragon Art LLC              Server Time: Jul 30, 2024 08:21 AM           This website uses cookies to enhance your browsing experience. Learn More I Consent                ================================================================================ 