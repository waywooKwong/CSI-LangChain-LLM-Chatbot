{"ast":null,"code":"import \"core-js/modules/es.array.fill.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/web.timers.js\";\nimport * as echarts from 'echarts';\nexport default {\n  name: 'StartView',\n  mounted: function mounted() {\n    this.initChart();\n    this.animateAndRedirect();\n  },\n  methods: {\n    initChart: function initChart() {\n      var chartDom = document.getElementById('main');\n      var myChart = echarts.init(chartDom);\n      var option = {\n        graphic: {\n          elements: [{\n            type: 'group',\n            left: 'center',\n            top: 'center',\n            children: new Array(7).fill(0).map(function (val, i) {\n              return {\n                type: 'rect',\n                x: i * 20,\n                shape: {\n                  x: 0,\n                  y: -40,\n                  width: 10,\n                  height: 80\n                },\n                style: {\n                  fill: '#5470c6'\n                },\n                keyframeAnimation: {\n                  duration: 1000,\n                  delay: i * 200,\n                  loop: true,\n                  keyframes: [{\n                    percent: 0.5,\n                    scaleY: 0.3,\n                    easing: 'cubicIn'\n                  }, {\n                    percent: 1,\n                    scaleY: 1,\n                    easing: 'cubicOut'\n                  }]\n                }\n              };\n            })\n          }]\n        }\n      };\n      option && myChart.setOption(option);\n    },\n    animateAndRedirect: function animateAndRedirect() {\n      var _this = this;\n      // First animation\n      setTimeout(function () {\n        var chartDom = document.getElementById('main');\n        var myChart = echarts.init(chartDom);\n        var newOption = {\n          graphic: {\n            elements: [{\n              type: 'group',\n              left: 'center',\n              top: 'center',\n              children: new Array(7).fill(0).map(function (val, i) {\n                return {\n                  type: 'rect',\n                  x: i * 20,\n                  shape: {\n                    x: 0,\n                    y: -40,\n                    width: 10,\n                    height: 80\n                  },\n                  style: {\n                    fill: '#5470c6'\n                  },\n                  keyframeAnimation: {\n                    duration: 1000,\n                    delay: i * 200,\n                    loop: true,\n                    keyframes: [{\n                      percent: 0.5,\n                      scaleY: 0.3,\n                      easing: 'cubicIn'\n                    }, {\n                      percent: 1,\n                      scaleY: 1,\n                      easing: 'cubicOut'\n                    }]\n                  }\n                };\n              })\n            }]\n          }\n        };\n        myChart.setOption(newOption);\n\n        // Redirect after 1 second\n        setTimeout(function () {\n          _this.$router.push({\n            name: 'ChatView'\n          });\n        }, 1000);\n      }, 3000);\n    }\n  }\n};","map":{"version":3,"names":["echarts","name","mounted","initChart","animateAndRedirect","methods","chartDom","document","getElementById","myChart","init","option","graphic","elements","type","left","top","children","Array","fill","map","val","i","x","shape","y","width","height","style","keyframeAnimation","duration","delay","loop","keyframes","percent","scaleY","easing","setOption","_this","setTimeout","newOption","$router","push"],"sources":["src/views/StartView.vue"],"sourcesContent":["<template>\r\n    <div id=\"main\" style=\"width: 100%; height: 100vh;\"></div>\r\n  </template>\r\n  \r\n  <script>\r\n  import * as echarts from 'echarts';\r\n  \r\n  export default {\r\n    name: 'StartView',\r\n    mounted() {\r\n      this.initChart();\r\n      this.animateAndRedirect();\r\n    },\r\n    methods: {\r\n      initChart() {\r\n        const chartDom = document.getElementById('main');\r\n        const myChart = echarts.init(chartDom);\r\n        const option = {\r\n          graphic: {\r\n            elements: [\r\n              {\r\n                type: 'group',\r\n                left: 'center',\r\n                top: 'center',\r\n                children: new Array(7).fill(0).map((val, i) => ({\r\n                  type: 'rect',\r\n                  x: i * 20,\r\n                  shape: {\r\n                    x: 0,\r\n                    y: -40,\r\n                    width: 10,\r\n                    height: 80,\r\n                  },\r\n                  style: {\r\n                    fill: '#5470c6',\r\n                  },\r\n                  keyframeAnimation: {\r\n                    duration: 1000,\r\n                    delay: i * 200,\r\n                    loop: true,\r\n                    keyframes: [\r\n                      {\r\n                        percent: 0.5,\r\n                        scaleY: 0.3,\r\n                        easing: 'cubicIn',\r\n                      },\r\n                      {\r\n                        percent: 1,\r\n                        scaleY: 1,\r\n                        easing: 'cubicOut',\r\n                      },\r\n                    ],\r\n                  },\r\n                })),\r\n              },\r\n            ],\r\n          },\r\n        };\r\n        option && myChart.setOption(option);\r\n      },\r\n      animateAndRedirect() {\r\n        // First animation\r\n        setTimeout(() => {\r\n          const chartDom = document.getElementById('main');\r\n          const myChart = echarts.init(chartDom);\r\n          const newOption = {\r\n            graphic: {\r\n              elements: [\r\n                {\r\n                  type: 'group',\r\n                  left: 'center',\r\n                  top: 'center',\r\n                  children: new Array(7).fill(0).map((val, i) => ({\r\n                    type: 'rect',\r\n                    x: i * 20,\r\n                    shape: {\r\n                      x: 0,\r\n                      y: -40,\r\n                      width: 10,\r\n                      height: 80,\r\n                    },\r\n                    style: {\r\n                      fill: '#5470c6',\r\n                    },\r\n                    keyframeAnimation: {\r\n                      duration: 1000,\r\n                      delay: i * 200,\r\n                      loop: true,\r\n                      keyframes: [\r\n                        {\r\n                          percent: 0.5,\r\n                          scaleY: 0.3,\r\n                          easing: 'cubicIn',\r\n                        },\r\n                        {\r\n                          percent: 1,\r\n                          scaleY: 1,\r\n                          easing: 'cubicOut',\r\n                        },\r\n                      ],\r\n                    },\r\n                  })),\r\n                },\r\n              ],\r\n            },\r\n          };\r\n          myChart.setOption(newOption);\r\n  \r\n          // Redirect after 1 second\r\n          setTimeout(() => {\r\n            this.$router.push({ name: 'ChatView' });\r\n          }, 1000);\r\n        }, 3000);\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  #main {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n  </style>\r\n  "],"mappings":";;;;AAKA,YAAAA,OAAA;AAEA;EACAC,IAAA;EACAC,OAAA,WAAAA,QAAA;IACA,KAAAC,SAAA;IACA,KAAAC,kBAAA;EACA;EACAC,OAAA;IACAF,SAAA,WAAAA,UAAA;MACA,IAAAG,QAAA,GAAAC,QAAA,CAAAC,cAAA;MACA,IAAAC,OAAA,GAAAT,OAAA,CAAAU,IAAA,CAAAJ,QAAA;MACA,IAAAK,MAAA;QACAC,OAAA;UACAC,QAAA,GACA;YACAC,IAAA;YACAC,IAAA;YACAC,GAAA;YACAC,QAAA,MAAAC,KAAA,IAAAC,IAAA,IAAAC,GAAA,WAAAC,GAAA,EAAAC,CAAA;cAAA;gBACAR,IAAA;gBACAS,CAAA,EAAAD,CAAA;gBACAE,KAAA;kBACAD,CAAA;kBACAE,CAAA;kBACAC,KAAA;kBACAC,MAAA;gBACA;gBACAC,KAAA;kBACAT,IAAA;gBACA;gBACAU,iBAAA;kBACAC,QAAA;kBACAC,KAAA,EAAAT,CAAA;kBACAU,IAAA;kBACAC,SAAA,GACA;oBACAC,OAAA;oBACAC,MAAA;oBACAC,MAAA;kBACA,GACA;oBACAF,OAAA;oBACAC,MAAA;oBACAC,MAAA;kBACA;gBAEA;cACA;YAAA;UACA;QAEA;MACA;MACAzB,MAAA,IAAAF,OAAA,CAAA4B,SAAA,CAAA1B,MAAA;IACA;IACAP,kBAAA,WAAAA,mBAAA;MAAA,IAAAkC,KAAA;MACA;MACAC,UAAA;QACA,IAAAjC,QAAA,GAAAC,QAAA,CAAAC,cAAA;QACA,IAAAC,OAAA,GAAAT,OAAA,CAAAU,IAAA,CAAAJ,QAAA;QACA,IAAAkC,SAAA;UACA5B,OAAA;YACAC,QAAA,GACA;cACAC,IAAA;cACAC,IAAA;cACAC,GAAA;cACAC,QAAA,MAAAC,KAAA,IAAAC,IAAA,IAAAC,GAAA,WAAAC,GAAA,EAAAC,CAAA;gBAAA;kBACAR,IAAA;kBACAS,CAAA,EAAAD,CAAA;kBACAE,KAAA;oBACAD,CAAA;oBACAE,CAAA;oBACAC,KAAA;oBACAC,MAAA;kBACA;kBACAC,KAAA;oBACAT,IAAA;kBACA;kBACAU,iBAAA;oBACAC,QAAA;oBACAC,KAAA,EAAAT,CAAA;oBACAU,IAAA;oBACAC,SAAA,GACA;sBACAC,OAAA;sBACAC,MAAA;sBACAC,MAAA;oBACA,GACA;sBACAF,OAAA;sBACAC,MAAA;sBACAC,MAAA;oBACA;kBAEA;gBACA;cAAA;YACA;UAEA;QACA;QACA3B,OAAA,CAAA4B,SAAA,CAAAG,SAAA;;QAEA;QACAD,UAAA;UACAD,KAAA,CAAAG,OAAA,CAAAC,IAAA;YAAAzC,IAAA;UAAA;QACA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}