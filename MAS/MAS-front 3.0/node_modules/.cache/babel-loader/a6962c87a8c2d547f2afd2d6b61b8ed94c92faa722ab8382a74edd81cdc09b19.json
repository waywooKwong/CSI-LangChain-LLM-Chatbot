{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/web.timers.js\";\nimport * as echarts from 'echarts';\nexport default {\n  name: 'StartView',\n  mounted: function mounted() {\n    var _this = this;\n    this.initChart();\n    setTimeout(function () {\n      _this.$router.push({\n        name: 'ChatView'\n      });\n    }, 3000);\n  },\n  methods: {\n    initChart: function initChart() {\n      var chartDom = document.getElementById('main');\n      var myChart = echarts.init(chartDom);\n      var option = {\n        graphic: {\n          elements: [{\n            type: 'text',\n            left: 'center',\n            top: 'center',\n            style: {\n              text: 'MAS',\n              fontSize: 80,\n              fontWeight: 'bold',\n              lineDash: [0, 200],\n              lineDashOffset: 0,\n              fill: 'transparent',\n              stroke: '#000',\n              lineWidth: 1\n            },\n            keyframeAnimation: {\n              duration: 3000,\n              loop: true,\n              keyframes: [{\n                percent: 0.7,\n                style: {\n                  fill: 'transparent',\n                  lineDashOffset: 200,\n                  lineDash: [200, 0]\n                }\n              }, {\n                // Stop for a while.\n                percent: 0.8,\n                style: {\n                  fill: 'transparent'\n                }\n              }, {\n                percent: 1,\n                style: {\n                  fill: 'black'\n                }\n              }]\n            }\n          }]\n        }\n      };\n      option && myChart.setOption(option);\n    }\n  }\n};","map":{"version":3,"names":["echarts","name","mounted","_this","initChart","setTimeout","$router","push","methods","chartDom","document","getElementById","myChart","init","option","graphic","elements","type","left","top","style","text","fontSize","fontWeight","lineDash","lineDashOffset","fill","stroke","lineWidth","keyframeAnimation","duration","loop","keyframes","percent","setOption"],"sources":["src/views/StartView.vue"],"sourcesContent":["<template>\r\n    <div id=\"main\" style=\"width: 100%; height: 100vh;\"></div>\r\n  </template>\r\n  \r\n  <script>\r\n  import * as echarts from 'echarts';\r\n  \r\n  export default {\r\n    name: 'StartView',\r\n    mounted() {\r\n      this.initChart();\r\n      setTimeout(() => {\r\n        this.$router.push({ name: 'ChatView' });\r\n      }, 3000);\r\n    },\r\n    methods: {\r\n      initChart() {\r\n        const chartDom = document.getElementById('main');\r\n        const myChart = echarts.init(chartDom);\r\n        const option = {\r\n          graphic: {\r\n            elements: [\r\n              {\r\n                type: 'text',\r\n                left: 'center',\r\n                top: 'center',\r\n                style: {\r\n                  text: 'MAS',\r\n                  fontSize: 80,\r\n                  fontWeight: 'bold',\r\n                  lineDash: [0, 200],\r\n                  lineDashOffset: 0,\r\n                  fill: 'transparent',\r\n                  stroke: '#000',\r\n                  lineWidth: 1,\r\n                },\r\n                keyframeAnimation: {\r\n                  duration: 3000,\r\n                  loop: true,\r\n                  keyframes: [\r\n                    {\r\n                      percent: 0.7,\r\n                      style: {\r\n                        fill: 'transparent',\r\n                        lineDashOffset: 200,\r\n                        lineDash: [200, 0],\r\n                      },\r\n                    },\r\n                    {\r\n                      // Stop for a while.\r\n                      percent: 0.8,\r\n                      style: {\r\n                        fill: 'transparent',\r\n                      },\r\n                    },\r\n                    {\r\n                      percent: 1,\r\n                      style: {\r\n                        fill: 'black',\r\n                      },\r\n                    },\r\n                  ],\r\n                },\r\n              },\r\n            ],\r\n          },\r\n        };\r\n        option && myChart.setOption(option);\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  #main {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n  </style>\r\n  "],"mappings":";;AAKA,YAAAA,OAAA;AAEA;EACAC,IAAA;EACAC,OAAA,WAAAA,QAAA;IAAA,IAAAC,KAAA;IACA,KAAAC,SAAA;IACAC,UAAA;MACAF,KAAA,CAAAG,OAAA,CAAAC,IAAA;QAAAN,IAAA;MAAA;IACA;EACA;EACAO,OAAA;IACAJ,SAAA,WAAAA,UAAA;MACA,IAAAK,QAAA,GAAAC,QAAA,CAAAC,cAAA;MACA,IAAAC,OAAA,GAAAZ,OAAA,CAAAa,IAAA,CAAAJ,QAAA;MACA,IAAAK,MAAA;QACAC,OAAA;UACAC,QAAA,GACA;YACAC,IAAA;YACAC,IAAA;YACAC,GAAA;YACAC,KAAA;cACAC,IAAA;cACAC,QAAA;cACAC,UAAA;cACAC,QAAA;cACAC,cAAA;cACAC,IAAA;cACAC,MAAA;cACAC,SAAA;YACA;YACAC,iBAAA;cACAC,QAAA;cACAC,IAAA;cACAC,SAAA,GACA;gBACAC,OAAA;gBACAb,KAAA;kBACAM,IAAA;kBACAD,cAAA;kBACAD,QAAA;gBACA;cACA,GACA;gBACA;gBACAS,OAAA;gBACAb,KAAA;kBACAM,IAAA;gBACA;cACA,GACA;gBACAO,OAAA;gBACAb,KAAA;kBACAM,IAAA;gBACA;cACA;YAEA;UACA;QAEA;MACA;MACAZ,MAAA,IAAAF,OAAA,CAAAsB,SAAA,CAAApB,MAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}